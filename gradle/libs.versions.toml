[versions]
accompanistInsets = "0.30.1"
accompanistSystemuicontroller = "0.32.0"
activityCompose = "1.9.0"
animation = "1.7.0-beta01"
billingKtx = "7.0.0"
coilCompose = "2.6.0"
composeShimmer = "1.2.0"
constraintlayoutCompose = "1.0.1"
coreSplashscreen = "1.2.0-alpha01"
coreTesting = "2.2.0"
espressoCore = "3.5.1"
firebaseBom = "33.0.0"
foundation = "1.6.7"
hiltAndroid = "2.51.1"
hiltNavigationCompose = "1.2.0"
hiltNavigationFragment = "1.2.0"
insetter = "0.6.1"
junit = "4.13.2"
junitVersion = "1.1.5"
konfettiCompose = "2.0.3"
kotlin = "2.0.0"
compose = "1.5.14"
kotlinxMetadataJvm = "0.6.0"
lifecycleRuntimeCompose = "2.8.0"
lifecycleViewmodelCompose = "2.8.0"
material3 = "1.2.1"
material3Android = "1.2.1"
material3WindowSizeClass = "1.2.1"
mockitoInline = "3.12.4"
mockitoCore = "3.12.4"
navigationCompose = "2.7.7"
playServicesAds = "23.1.0"
playServicesAuth = "21.2.0"
coil = "2.6.0"
accompanist = "0.32.0"
appcompat = "1.7.0-rc01"
hilt = "2.51.1"
navigationSafeArgs = "2.7.7"
googleServices = "4.4.1"
firebaseCrashlytics = "3.0.1"
daggerHiltGradle = "2.48"
roomVersion = "2.6.1"
runtimeLivedata = "1.6.7"
shimmer = "0.5.0"
transformations = "2.0.3"

[plugins]
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
androidApplication = { id = "com.android.application", version = "8.4.1" }
androidLibrary = { id = "com.android.library", version = "8.4.1" }
hilt = { id = "com.google.dagger.hilt.android", version = "2.44" }
ksp = { id = "com.google.devtools.ksp", version = "2.0.0-1.0.21" }
crashlytics = { id = "com.google.firebase.crashlytics", version = "3.0.1" }

[libraries]
accompanistInsets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanistInsets" }
accompanistSystemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
animation = { module = "androidx.compose.animation:animation", version.ref = "animation" }
billingKtx = { module = "com.android.billingclient:billing-ktx", version.ref = "billingKtx" }
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
composeShimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }
constraintlayoutCompose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
coreSplashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
extJunit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
firebaseAuthKtx = { module = "com.google.firebase:firebase-auth-ktx" }
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
foundation = { module = "androidx.compose.foundation:foundation", version.ref = "foundation" }
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hiltNavigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
insetter = { module = "dev.chrisbanes.insetter:insetter", version.ref = "insetter" }
hiltNavigationFragment = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "hiltNavigationFragment" }
junit = { module = "junit:junit", version.ref = "junit" }
konfettiCompose = { module = "nl.dionsegijn:konfetti-compose", version.ref = "konfettiCompose" }
kotlinxMetadataJvm = { module = "org.jetbrains.kotlinx:kotlinx-metadata-jvm", version.ref = "kotlinxMetadataJvm" }
lifecycleViewmodelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
lifecycleRuntimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeCompose" }
material3Android = { module = "androidx.compose.material3:material3-android", version.ref = "material3Android" }
material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
material3WindowSizeClass = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "material3WindowSizeClass" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockitoInline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
navigationSafeArgs = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigationSafeArgs" }
googleServices = { module = "com.google.gms:google-services", version.ref = "googleServices" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlytics" }
daggerHiltGradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "daggerHiltGradle" }
playServicesAds = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
playServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "roomVersion" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
runtimeLivedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "runtimeLivedata" }
shimmer = { module = "com.facebook.shimmer:shimmer", version.ref = "shimmer" }
transformations = { module = "com.github.Commit451.coil-transformations:transformations", version.ref = "transformations" }

